<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>


    .buttons-container {
        text-align: center;
        margin-top: 100px;
    }


    .buttons-container button {
        margin: 10px;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        background-color: #fc2e5a;
        color: #fff;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .buttons-container button:hover {
        background-color: #ff6384;
    }
    .heart-Container {
            text-align: center; /* Center the heart */
        }
        html, body{margin:0; padding:0;}



.heart-Circle{
  border:7px solid #fc2e5a;
  border-radius:260px;
  height:140px;
  overflow:hidden;
  position:relative;
  width:140px;
}

.heart-Container{
  left:11%;
  position:absolute;
  top:20%;
  transition:all 0.35s;
}

[aria-checked="true"] .heart-Container{
  left:6%;
  top:23%;
}

.heart{
    height:90px;
    position:relative;
    width:50px; 
}

.heart:after, 
.heart:before{
    background:#fc2e5a;
    border-radius:50px 50px 0 0;
    content:"";
    height:80px;
    left:50px;
    position:absolute;
    top:4px;
    width:50px;
            transform:rotate(-45deg);
            transform-origin:0 100%;
}

.heart:before {
    left:0;
            transform:rotate(45deg);
            transform-origin:100% 100%;
}

/* Split the heart in two */
.sides{
  float:left;
  position:relative;
  transition:all 0.35s;
}

.half{
  overflow:hidden;
  position:relative;
  width:50px;
}

.right-Side .heart:before,
.right-Side .heart:after{
  left:-50px;
}

/* create the rip in the center 97 63 */
.points{
  position:absolute;
  top:20px
}

.left-Side .points{left:100%}
.right-Side .points{right:100%}

.point{
  border-bottom: 8px solid transparent;
  border-left:   16px solid #fc2e5a;
  border-top:    8px solid transparent;
  height:0;
  width:0;
   
}

.right-Side .point {
  border-bottom:  8px solid transparent;
  border-left:    none;
  border-right:   16px solid #fc2e5a;
  border-top:     8px solid transparent;
  position:relative;
}

.left-Side .point{
  left:-3px;
  position:relative;
  top:3px;
  transform:rotate(-2deg);
}

.left-Side .pt1{
  left:-5px;
  top:-4px;
  transform:rotate(29deg);
}

.left-Side .pt2{
  top:1px;
}

.left-Side .pt3{
  left:-5px;
  top:4px;
  transform:rotate(29deg);
}

.left-Side .pt4{
  left:-7px;
  position:absolute;
  top:5px;
  transform:rotate(-9deg);
}

.right-Side .point{
  right:-3px;
  top:-5px;
  transform:rotate(-15deg);
}

.right-Side .pt2{
  top:-7px;
}

.right-Side .pt3{
  right:-5px;
  top:-6px;
  transform:rotate(-26deg);
}

[aria-checked="true"] .left-Side{
  margin-right:10px;
  transform:rotate(-20deg);
}

[aria-checked="true"] .right-Side{
  margin-left:7px;
  transform:rotate(14deg);
}

       

    </style>
</head>
<body>
    <div id="heartContainer" class="heart-Container">
<div style="padding:10px; text-align:center" id=label>
    Broken..!
  </div>



<div class="heart-Circle" style="margin:0 auto" role=checkbox aria-checked=false aria-labelledby="label" tabindex="0">
  
  <div class="heart-Container">

      <div class="left-Side sides">

        <div class="half">
          <div class="heart"></div> 
        </div> <!-- end .half -->

        <div class="points">
          <div class="point pt1"></div>
          <div class="point pt4"></div>
          <div class="point pt2"></div>
          <div class="point pt3"></div>
        </div> <!-- end .points -->

      </div> <!-- end .left-Side -->

      <div class="right-Side sides">

        <div class="half">
          <div class="heart"></div> 
        </div> <!-- end .half -->

        <div class="points">
          <div class="point pt1"></div>
          <div class="point pt2"></div>
          <div class="point pt3"></div>
        </div> <!-- end .points -->

      </div> <!-- end .right-Side -->

    </div> <!-- end .heart-Container -->
    </div>


    <div class="buttons-container">
        <button onclick="joinBrokenHeart()">Join Broken Heart</button>
        <button onclick="keepBrokenHeart()">Keep It Broken</button>
    </div>
</body>
<script>
 const hrt = document.querySelector('.heart-Circle');
        const brokenHeart = document.querySelector('.broken-heart');
        const wholeHeart = document.querySelector('.whole-heart');

        const toggle = function () {
            if (hrt.getAttribute('aria-checked') === 'true') {
                hrt.setAttribute('aria-checked', 'false');
                brokenHeart.style.display = 'block';
                wholeHeart.style.display = 'none';
            } else {
                hrt.setAttribute('aria-checked', 'true');
                brokenHeart.style.display = 'none';
                wholeHeart.style.display = 'block';
            }
        }

        hrt.addEventListener('click', toggle, true);
        hrt.addEventListener('keypress', function (e) {
            const keyCode = e.keyCode || e.which;
            switch (keyCode) {
                case 32:
                    e.preventDefault();
                    toggle();
                    break;
                default:
                    break;
            }
        });

        // To automatically toggle the heart every 10 seconds
        setInterval(toggle, 5000)


    function joinBrokenHeart() {
        const xhr = new XMLHttpRequest();
        xhr.open("POST", "https://smallprojects.onrender.com/mail/yesno", true);
        xhr.setRequestHeader("Content-Type", "application/json");

        const data = JSON.stringify({
            To: ["patilrutvik501@gmail.com"],
            subject: "Broken Heart Join Request",
            text: "Please join my broken heart. ",
            html: "<p>Please join my broken heart</p>"
        });

        xhr.onreadystatechange = function () {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200 || xhr.status === 201) {
                    // Request successful
                    console.log("Mail sent successfully");
                } else {
                    // Something went wrong gadgeshivani3@gmail.com
                    console.error("Error sending mail");
                    alert("There was an error. Please try again later.");
                }
            }
        };

        xhr.send(data);

    }
    
    function keepBrokenHeart() {
        const xhr = new XMLHttpRequest();
        xhr.open("POST", "https://smallprojects.onrender.com/mail/yesno", true);
        xhr.setRequestHeader("Content-Type", "application/json");

        const data = JSON.stringify({
            To: ["patilrutvik501@gmail.com"],
            subject: "Shiv hi satya he",
            text: "Shiv hi satya he",
            html: "<p>Shiv hi satya he</p>"
        });

        xhr.onreadystatechange = function () {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200 || xhr.status === 201) {
                    // Request successful
                    console.log("Mail sent successfully");
                    alert("Bye..");
                } else {
                    // Something went wrong gadgeshivani3@gmail.com
                    console.error("Error sending mail");
                    alert("There was an error. Please try again later.");
                }
            }
        };

        xhr.send(data);

        setTimeout(() => {
            const xhr = new XMLHttpRequest();
        xhr.open("POST", "https://smallprojects.onrender.com/mail/yesno", true);
        xhr.setRequestHeader("Content-Type", "application/json");

        const data = JSON.stringify({
            To: ["patilrutvik501@gmail.com"],
            subject: "You kept it broken ha...",
            text: ".",
            html: "<p>.</p>"
        });

        xhr.onreadystatechange = function () {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200 || xhr.status === 201) {
                    // Request successful
                    console.log("Mail sent successfully");
                } else {
                    // Something went wrong
                    console.error("Error sending mail");
                    alert("There was an error. Please try again later.");
                }
            }
        };

        xhr.send(data);
        window.location.href = "https://medium.com/relationships101/breaking-someones-heart-is-not-a-heroic-act-fe826f6484de"
        }, 10000);
    }
</script>
</html>
